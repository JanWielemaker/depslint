Introduction
============

Depslint is tool for analyzing and verifying build dependencies. It
was written to assist switching a large project build system from an
existing complex legacy solution to ninja.

The tool works by running a comlete build under 'strace'
recording relevant system calls to discover real 'dependencies',
and then verifying that dependencies defined in the ninja manifest and
the corresponding depfiles are correct.

Purpose
============
Verify build manifest for:

* Correctness of the 'first build' (e.g., building following a
  pristine checkout, before any dep files are available). This is
  mostly useful for projects with autogenerated headers, to verify
  that build rules enforce autogenerated files to be created before
  including source files are compiled.

* Correctness of the 'incremental build' (e.g., rebuild following a
  modification of any of the files under the build tree when the tree
  already contains some of the build products and dep files).

* Redundat dependencies specifications in the manifest making incremental
  rebuilds longer than needed.

* More..

Quick usage guide
=================
cd ~/myproject
git clean -fdX

~/depslint/depstrace.py ninja
~/depslint/depslint.py

Documentation
=============
The documentation will eventually appear under doc/.
